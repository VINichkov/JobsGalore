//= require jquery.min.js
//= require jquery_ujs

//= require blazy.min
//=#require datalist-polyfill.min
//= require react
//= require components
//= require react_ujs
//= require trix


//var tinyName =  'editor_resume';

var bLazy = new Blazy({
    //Загрузка маленьких изображений. Возможно в будующем!!!
  //    breakpoints: [{
   //     width: 740,
   //     src: 'data-src-small'
   // }],
     success: function(element){
        setTimeout(function(){
            // We want to remove the loader gif now.
            // First we find the parent container
            // then we remove the "loading" class which holds the loader image
            var parent = element.parentNode;
            parent.className = parent.className.replace(/\bloading\b/,'');
        }, 200);
    }
});


var readURL = function (input) {
    if (input.files) {
        let uploadFile = input.files[0];
        switch(uploadFile.type){
            case 'text/plain':
                uploadTXT(uploadFile);
                break;
            default:
                uploadPdfDocx(uploadFile);
        }
    }
};

var uploadPdfDocx = function(uploadFile) {
    let ed = $("trix-editor")[0];
    let fd = new FormData;
    fd.append('file', uploadFile);
    $.ajax({
        type: 'POST',
        url: "<%=Rails.application.routes.url_helpers.file_to_html_path%>",
        data: fd,
        success: function( data ) {
            ed.editor.setSelectedRange([0, 0]);
            ed.editor.insertHTML(data.description);
        },
        contentType: false,
        processData: false
    });
};

var uploadTXT = function(uploadFile,tiny_id) {
    let ed = $("trix-editor")[0];
    let reader = new FileReader();
    reader.onload = function (e) {
        let html = e.target.result;
        html = html.replace(new RegExp('<','g'), "&lt;");
        html = html.replace(new RegExp('>','g'), "&gt;");
        ed.editor.setSelectedRange([0, 0]);
        ed.editor.insertHTML(html);
        //window.setTimeout(function() {
         //   ed.setContent(html, { format: 'html' });
         //   ed.setProgressState(0); // Hide progress
        //}, 3000);
    };
    reader.readAsText(uploadFile);
};

var trixConfigerating = function(){
    let conf =   Trix.config.blockAttributes;
    conf.heading1.tagName="h3";
    conf.heading2 = {breakOnReturn: true,
        nestable: true,
        group: false,
        tagName: "h1",
        terminal: truetagName="h3"};
    conf.heading3 = {breakOnReturn: true,
        nestable: true,
        group: false,
        tagName: "h2",
        terminal: truetagName="h2"};
    conf.heading4 = {breakOnReturn: true,
        nestable: true,
        group: false,
        tagName: "h4",
        terminal: truetagName="h4"};
    conf.img = {  tagName: "img", parse: false};
    conf.a = {  tagName: "a", parse: false};
};

$(function() {
    $("#inp").change(function() {
        readURL(this);
    });

    $(".linkedin_click").click( function () {
        $.get("<%=Rails.application.routes.url_helpers.linkedin_resume_path%>", function(data) {
            let ed = $("trix-editor")[0];
            $("[name='resume[title]']").val(data.title);
            ed.editor.setSelectedRange([0, 0]);
            ed.editor.insertHTML(data.description);
            $("[name='resume[industry_id]']").val(data.industry_id);
        });
    });

    $('.datepicker_reg').datepicker({
        orientation: "bottom auto",
        language: "en-AU",
        autoclose: true
    });
    trixConfigerating();
});

