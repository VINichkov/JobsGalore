.print_header
  .container
    div
      span
        = image_tag(image_path("method-draw-image.png"), size: "200x100")
.container-fluid.hidden-xs.hidden-sm.not_print
  .container
    h1
      span
        = image_tag(image_path("method-draw-image.png"), size: "200x100")
nav.navbar.navbar-fixed-top.navbar-default.hidden-xs.hidden-md.hidden-lg
  .container-fluid
    .row
      .col-sm-8
        ul.nav.navbar-nav
          li
            = link_to root_path do
              span
                = image_tag(image_path("method-draw-image.png"), size: "100x50")
          li.elem_header
            a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
              |Jobs
              b.caret
            ul.dropdown-menu
              - if not (client_signed_in?) or (current_client.character=='employer')
                li
                  = link_to "Post а job", new_job_path
              li
                a[href= '/by_category/2']
                  |Jobs by category
          li.elem_header
            a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
              |Resumes
              b.caret
            ul.dropdown-menu
              - if not (client_signed_in?) or not (current_client.character=='employer')
                li
                  = link_to "Post а resume", new_resume_path
              li
                =link_to"Resumes by category",'/by_category/3'
          li.elem_header.dropdown
            a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
              |Companies
              b.caret
            ul.dropdown-menu
              li
                a[href= '/by_category/1']
                  |Companies by category
      .col-sm-4
        a.navbar-brand.active
          - if client_signed_in?
            ul.nav.navbar-nav
              li.elem_header
                a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
                  = "#{current_client.firstname} #{current_client.lastname}"
                  b.caret
                ul.dropdown-menu
                  li
                    = link_to client_root_path do
                      span.glyphicon.glyphicon-user
                      | &nbsp; Your profile
                  li
                    = link_to settings_path do
                      span.glyphicon.glyphicon-cog
                      | &nbsp; Settings
                  - if current_client.resp
                    li
                      = link_to settings_company_path do
                        span.glyphicon.glyphicon-cd
                        | &nbsp; Company
                  - if current_client.email == PropertsHelper::ADMIN
                    li
                      = link_to admin_path do
                        span.glyphicon.glyphicon-eye-open
                        | &nbsp; Administration of site
                  li
                    = link_to destroy_client_session_path, :method => :delete do
                      span.glyphicon.glyphicon-log-out
                      | &nbsp; Log out


          - else
            ul.nav.navbar-nav
              li.elem_header
                = link_to 'Log in', new_client_session_path
              li.elem_header
                = link_to 'Sign up', new_client_registration_path
    .row
      .col-lg-6.col-md-6
        = form_tag('/search', method: :get, class:'navbar-form form-inline')  do
          -if session[:param].nil?
            = react_component("Search", name:'main_search', categories: industries)
          -else
            = react_component("Search", name:'main_search',params: session[:param], categories: industries)
    .row
      p
.clear_menu-sm.hidden-xs.hidden-md.hidden-lg
nav.navmenu.navmenu-default.navmenu-fixed-left.offcanvas.nav-min#mainnav[role="navigation"]
      ul.nav.navbar-nav
        - if client_signed_in?
            li
              =link_to client_root_path do
                - if current_client.photo.nil?
                  = image_tag(image_path("avatar.jpg"), class: 'img-thumbnail', size: "50x50")
                - else
                  = image_tag(Dragonfly.app.remote_url_for(current_client.photo_uid), class: 'img-thumbnail', size: "50x50")
                | &nbsp; #{current_client.firstname} #{current_client.lastname} &nbsp;
                span.glyphicon.glyphicon-chevron-right
            li

              = link_to settings_path do
                | &nbsp;
                span.glyphicon.glyphicon-cog
                | &nbsp; Settings
            - if current_client.resp
              li
                = link_to settings_company_path do
                  | &nbsp;
                  span.glyphicon.glyphicon-cd
                  | &nbsp; Company
            - if current_client.email == PropertsHelper::ADMIN
              li
                = link_to admin_path do
                  span.glyphicon.glyphicon-eye-open
                  | &nbsp; Administration of site
        - if not (client_signed_in?) or (current_client.character=='employer')
          li
            = link_to new_job_path do
              |&nbsp;
              span.glyphicon.glyphicon-briefcase
              |&nbsp;Post а job
        - if not (client_signed_in?) or not (current_client.character=='employer')
          li
            = link_to new_resume_path do
              |&nbsp;
              span.glyphicon.glyphicon-paperclip
              |&nbsp;Post а resume
        li
          = link_to '/by_category/2' do
            |&nbsp;
            span.glyphicon.glyphicon-gift
            |&nbsp; Jobs by category
        li
          = link_to  '/by_category/3' do
            |&nbsp;
            span.glyphicon.glyphicon-bullhorn
            |&nbsp; Resumes by category
        li
          =link_to '/by_category/1' do
            |&nbsp;
            span.glyphicon.glyphicon-leaf
            |&nbsp; Companies by category
        - unless client_signed_in?
          li.nav-item
            = link_to  new_client_session_path do
              |&nbsp;
              span.glyphicon.glyphicon-log-in
              |&nbsp; Log in
          li.nav-item
            = link_to new_client_registration_path do
              |&nbsp;
              span.glyphicon.glyphicon-registration-mark
              |&nbsp; Sign up
        -else
          li
            = link_to destroy_client_session_path, :method => :delete do
              | &nbsp;
              span.glyphicon.glyphicon-log-out
              | &nbsp; Log out
nav.navmenu.navmenu-default.navmenu-fixed-right.offcanvas#search_menu[role="navigation"]
  .container
    .col-xs-12
      = form_tag('/search', method: :get, class:'navbar-form form-inline')  do
        .form-group
          .input-group
            input.form-control[placeholder="Search"  default="#{session[:param] ? session[:param][:value]: ' '}" name='main_search[value]' type="text"]
            .input-group-btn
              button.btn.btn-success[type="submit"]
                i.glyphicon.glyphicon-search
        .form-group
          label
            |Select
          select.form-control.navbar-btn[name="main_search[type]"]
            option[value='2' selected="selected"]
              |Jobs
            option[value='3']
              |Resumes
            option[value='1']
              |Companies
        .form-group
            label
              input[type="checkbox" name='main_search[urgent]']
              | Urgent
        .form-group
          label
            |Select category
          = react_component("Category", defaultValue:"#{session[:param] ? session[:param][:category] : ''}", name:"main_search[category]", id:"category_search", className:"form-control navbar-btn", categories: industries)
        .form-group
          label
            |Location
          = react_component("Autocomplete", className:"form-control dropdown-toggle", defaultId:"#{session[:param] ? session[:param][:location_id]:''}", defaultName:"#{session[:param] ? session[:param][:location_name] : ''}", name:"main_search[location", id:"location_search")
        .form-group
          label
            |Salary
          input#salary.form-control[default="#{session[:param] ? session[:param][:salary]:''}" name='main_search[salary]' type="text"]
        .form-group
          .col-xs-6
            label
              input[type="checkbox" name='main_search[permanent]']
              | Permanent
          .col-xs-6
            label
              input[type="checkbox" name='main_search[casual]']
              |Casualt
          .col-xs-6
            label
              input[type="checkbox" name='main_search[temp]']
              |Temporary
          .col-xs-6
            label
              input[type="checkbox" name='main_search[contract]']
              |Contract
          .col-xs-6
            label
              input[type="checkbox" name='main_search[fulltime]']
              |Full-time
          .col-xs-6
            label
              input[type="checkbox" name='main_search[parttime]']
              |Part-time
          .col-xs-6
            label
              input[type="checkbox" name='main_search[flextime]']
              |Flex-time
          .col-xs-6
            label
              input[type="checkbox"  name='main_search[remote]']
              |Remote
.clear_menu.hidden-sm.hidden-md.hidden-lg
.navbar.navbar-default.navbar-fixed-top.hidden-sm.hidden-md.hidden-lg
  .row
    .col-xs-12
      button.navbar-toggle.navbar-left[type="button" data-toggle="offcanvas" data-target="#mainnav" data-canvas="body" aria-expanded="true" aria-controls="navbar"]
        span.sr-only Toggle navigation
        span.icon-bar
        span.icon-bar
        span.icon-bar
      =link_to PropertsHelper::TITLE, root_path, class: "navbar-brand active"
      button.navbar-toggle[type="button" data-toggle="offcanvas" data-target="#search_menu" data-canvas="body" aria-expanded="true" aria-controls="navbar"]
        span.glyphicon.glyphicon-search
  .row
    .container
        .col-xs-12
nav.navbar.navbar-static-top.navbar-default.hidden-xs.hidden-sm[data-spy="affix" data-offset-top="130"]
  .container-fluid
    .col-lg-1.col-md-1
      =link_to PropertsHelper::TITLE, root_path, class: "navbar-brand active"
    .col-lg-3.col-md-3
      ul.nav.navbar-nav
        li.nav-item
          a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
            |Jobs
            b.caret
          ul.dropdown-menu
            - if not (client_signed_in?) or (current_client.character=='employer')
              li
                = link_to "Post а job", new_job_path
            li
              a[href= '/by_category/2']
                |Jobs by category
        li.nav-item
          a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
            |Resumes
            b.caret
          ul.dropdown-menu
            - if not (client_signed_in?) or not (current_client.character=='employer')
              li
                = link_to "Post а resume", new_resume_path
            li
              =link_to"Resumes by category",'/by_category/3'
        li.nav-item.dropdown
          a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
            |Companies
            b.caret
          ul.dropdown-menu
            li
              a[href= '/by_category/1']
                |Companies by category
    .col-lg-6.col-md-6
      = form_tag('/search', method: :get, class: 'navbar-form form-inline')  do
        - if session[:param].nil?
          = react_component("Search", name: 'main_search', categories: industries)
        - else
          = react_component("Search", name: 'main_search', params: session[:param] , categories: industries)
    .col-lg-2.col-md-2
      a.navbar-brand.active
        - if client_signed_in?
          ul.nav.navbar-nav
            li.nav-item
              a.nav-link.dropdown-toggle[href="#" data-toggle="dropdown"]
                = "#{current_client.firstname} #{current_client.lastname}"
                b.caret
              ul.dropdown-menu
                li
                  =link_to client_root_path do
                    span.glyphicon.glyphicon-user
                    | &nbsp; Your profile
                li
                  =link_to settings_path do
                    span.glyphicon.glyphicon-cog
                    | &nbsp; Settings
                -if current_client.resp
                  li
                    =link_to settings_company_path do
                      span.glyphicon.glyphicon-cd
                      | &nbsp; Company
                - if current_client.email == PropertsHelper::ADMIN
                  li
                    = link_to admin_path do
                      span.glyphicon.glyphicon-eye-open
                      | &nbsp; Administration of site
                li
                  = link_to  destroy_client_session_path, :method => :delete do
                    span.glyphicon.glyphicon-log-out
                    | &nbsp; Log out


        - else
          ul.nav.navbar-nav
            li.nav-item
              = link_to 'Log in', new_client_session_path
            li.nav-item
              = link_to 'Sign up', new_client_registration_path
-unless notice.nil? then
  .container
    p.alert-success = notice
-unless alert.nil? then
  .container
    p.alert-warning = alert
