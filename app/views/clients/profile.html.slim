.container
  .row.well.hidden-xs.hidden-sm
    .col-md-6.col-lg-6
      -if @client.photo.nil?
        = image_tag(image_path("avatar.jpg"), class: 'img-thumbnail', size:"300x300")
      -else
        =image_tag(Dragonfly.app.remote_url_for(@client.photo_uid), class: 'img-thumbnail', size:"300x300")
    .col-md-6.col-lg-6
      h2 #{@client.firstname} #{@client.lastname}
      h2 Email: #{@client.email}
      h2 Phone: #{@client.phone}
      h2 #{@client.location.suburb}, #{@client.location.state}
  .row.well.hidden-md.hidden-lg
    .col-sm-6
      - if @client.photo.nil?
        = image_tag(image_path("avatar.jpg"), class: 'img-thumbnail', size: "200x200")
      - else
        = image_tag(Dragonfly.app.remote_url_for(@client.photo_uid), class: 'img-thumbnail', size: "200x200")
    .col-sm-6
      h3 #{@client.firstname} #{@client.lastname}
      h4 Email: #{@client.email}
      h4 Phone: #{@client.phone}
      h4 #{@client.location.suburb}, #{@client.location.state}
  -if @client.character =='employer' then
    .row
      .col-sm-6.col-xs-12
      .col-sm-6.col-xs-12
        = link_to "Post a job", new_job_path, class: "btn btn-primary btn-block"
        p
    .row
      -@client.company&.all&.each do |company|
        h3
        - Client.joins('LEFT JOIN responsibles On responsibles.client_id = clients.id').where("responsibles.company_id = ?",company.id).all.each do |client|
          - if client.job.count > 0
            h3 #{company.name}  ---  #{client.firstname} #{client.lastname}
          - client.job.all.includes(:location).order(updated_at:  :desc).each do |job|
            -if not(job.highlight.nil?) and job.urgent.nil?
              - style = "panel-body well highlight"
            -elsif job.highlight.nil? and not(job.urgent.nil?)
              - style = "panel-body well urgent"
            - elsif not(job.highlight.nil?) and not (job.urgent.nil?)
              - style = "panel-body well highlight urgent"
            - elsif job.highlight.nil? and job.urgent.nil?
              - style = "panel-body well"
            div[class="#{style}"]
              .col-xs-7.col-xs-offset-5.hidden-lg.hidden-md.hidden-sm
                .btn-group.btn-group-justified
                  .btn-group
                    span.btn.btn-warning.btn-block[data-toggle="dropdown"]
                      span.glyphicon.glyphicon-cog
                      span.caret
                    ul.dropdown-menu
                      - if PropertsHelper::URGENT=="true"
                        li
                          = link_to "Urgent $10 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 1})
                      - if PropertsHelper::TOP == "true"
                        li
                          = link_to "Top $20 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 2})
                      - if PropertsHelper::HIGHLIGHT == "true"
                        li
                          = link_to "Highlight $5 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 3})
                  .btn-group
                    = link_to edit_job_path(job), class: "btn btn-success btn-block" do
                      span.glyphicon.glyphicon-pencil
                  .btn-group
                    = link_to job, data: {confirm: 'Are you sure?'}, method: :delete, class: "btn btn-danger btn-block " do
                      span.glyphicon.glyphicon-trash
                p
              .col-lg-9.col-md-9.col-sm-8
                h3
                  = link_to job.title.capitalize, job, class: 'text-warning'
                - if job.salarymax.nil? and not job.salarymin.nil? then
                  p
                    strong
                      |Solary: &nbsp;
                    = job.salarymin.to_i.to_s
                - elsif not (job.salarymax.nil? and job.salarymin.nil?)
                  p
                    strong
                      |Solary: &nbsp;
                    = job.salarymin.to_i.to_s+" - "+ job.salarymax.to_i.to_s
                p.small
                  strong
                    |Location: &nbsp;
                  |#{job.location.state.to_s+" "+job.location.suburb.capitalize.to_s}, &nbsp;
                  strong
                    |Posted: &nbsp;
                  |#{job.updated_at.strftime("%d %B %Y").to_s}
              .col-lg-3.col-md-3.col-sm-4.hidden-xs
                .row
                  .col-sm-12.col-lg-12.col-md-12
                    button.btn.btn-warning.btn-block[data-toggle="dropdown"]
                      |Extras &nbsp;
                      span.caret
                    ul.dropdown-menu
                      - if PropertsHelper::URGENT=="true"
                        li
                          = link_to "Urgent $10 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 1})
                      - if PropertsHelper::TOP == "true"
                        li
                          = link_to "Top $20 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 2})
                      - if PropertsHelper::HIGHLIGHT == "true"
                        li
                          = link_to "Highlight $5 (7 day)", bill_path(bill: {id: job.id, kind: 2, option: 3})
                    p
                  .col-sm-12.col-lg-12.col-md-12
                    = link_to "Edit", edit_job_path(job), class: "btn btn-success btn-block"
                    p
                  .col-sm-12.col-lg-12.col-md-12
                    = link_to "Delete", job, data: {confirm: 'Are you sure?'}, method: :delete, class: "btn btn-danger btn-block"
                    p
  - if @client.character =='employee' then
    .row
      .col-sm-6.col-xs-12
        h2 Your jobs
      .col-sm-6.col-xs-12
        = link_to "Post a job", new_job_path, class: "btn btn-primary btn-block"
        p
    .row
      - @client.job.all.includes(:location).order(updated_at: :desc).each do |job|
          - if not (job.highlight.nil?) and job.urgent.nil?
            .panel-body.well.highlight
              = render 'clients/job', job: job
          - elsif job.highlight.nil? and not (job.urgent.nil?)
            .panel-body.well.urgent
              = render 'clients/job', job: job
          - elsif not (job.highlight.nil?) and not (job.urgent.nil?)
            .panel-body.well.highlight.urgent
              = render 'clients/job', job: job
          - elsif job.highlight.nil? and job.urgent.nil?
            .panel-body.well
              = render 'clients/job', job: job
  -elsif @client.character =='aplicant'
    .row
      .col-sm-6.col-xs-12
        h3 Your resumes
      .col-sm-6.col-xs-12
        = link_to "Post a resume", new_resume_path, class: "btn btn-primary btn-block"
        p
    .row
      - if @client.resume.count>0
        -@client.resume.all.order(updated_at:  :desc).each do |resume|
          - if not (resume.highlight.nil?) and resume.urgent.nil?
            .panel-body.well.highlight
              = render 'clients/resume', resume: resume
          - elsif resume.highlight.nil? and not (resume.urgent.nil?)
            .panel-body.well.urgent
              = render 'clients/resume', resume: resume
          - elsif not (resume.highlight.nil?) and not (resume.urgent.nil?)
            .panel-body.well.highlight.urgent
              = render 'clients/resume', resume: resume
          - elsif resume.highlight.nil? and resume.urgent.nil?
            .panel-body.well
              = render 'clients/resume', resume: resume



      - else
        h3 You don't have resumes